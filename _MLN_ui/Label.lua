---
--- Generated by MLN Team (https://www.immomo.com)
--- Created by MLN Team.
--- DateTime: 15-01-2020 17:35
---

---
---  文本展示控件
---
---@note  非容器视图，不可以添加子视图。
---		注意：由于iOS Label在固定高度情况下渲染空间不足时，不会渲染剩下的行数，Android会继续渲染并存在截断现象，故，如果出现iOS和Android行数不一致情况，请将高度设置为能够容下足够行数的高度
---@class Label : View @parent class
---@field name string 
local _class = {
	_priveta_class_name = "Label"}

---
---  创建文本展示控件
---
---@return Label 
function Label()
	return _class
end

---
---  设置文本内容
---
---@param content string  要展示的文本内容
---@return Label 
function _class:text(content)
	return self
end

---
---  获取当前文本内容
---
---@return string 
function _class:text()
	return "string"
end

---
---  设置文字对齐方式，参见[TextAlign](TextAlign)
---
---@param align TextAlign  文字对齐方式
---@return Label 
function _class:textAlign(align)
	return self
end

---
---  获取文字对齐方式，参见[TextAlign](TextAlign)
---
---@return TextAlign 文字对齐方式，参见[TextAlign](TextAlign)
function _class:textAlign()
	return TextAlign()
end

---
---  设置字体大小
---
---@param size number  文字大小
---@return Label 
function _class:fontSize(size)
	return self
end

---
---  获取字体大小
---
---@return number 
function _class:fontSize()
	return 0
end

---
---  设置文字颜色
---
---@param color Color  文字颜色, 见[Color](Color)
---@return Label 
function _class:textColor(color)
	return self
end

---
---  获取文字颜色
---
---@return Color 文字颜色, 见[Color](Color)
function _class:textColor()
	return Color()
end

---
---  设置展示的最大行数，默认只展示一行
---
---@param num number  最大行数
---@return Label 
---@note  0代表最大行数不限制。当lines传入0时，Label的BreakMode会强制改为Clipping切割模式
function _class:lines(num)
	return self
end

---
---  获取展示的最大行数
---
---@return number 
function _class:lines()
	return 0
end

---
---  设置文字截断样式，参见[BreakMode](BreakMode)的枚举值
---
---@param mode BreakMode  文字截断样式的枚举值
---@return Label 
---@note  在多行情况下，当设置Start或Middle时，会强制改为Clipping切割模式
function _class:breakMode(mode)
	return self
end

---
---  获取文字截断样式，参见[BreakMode](BreakMode)的枚举值
---
---@return BreakMode 
function _class:breakMode()
	return BreakMode()
end

---
---  设置富文本，详情参见[StyleString](StyleString)
---
---@param styleString StyleString  富文本
---@return Label 
---@note  iOS设置该属性会清空之前设置的属性
function _class:styleText(styleString)
	return self
end

---
---  获取富文本，详情参见[StyleString](StyleString)
---
---@return StyleString 
function _class:styleText()
	return StyleString()
end

---
---  设置文字粗体
---
---@return Label 
---@note  弃用, 请使用setTextFontStyle方法
function _class:setTextBold()
	return self
end

---
---  设置字体样式
---
---@param style FontStyle  字体样式枚举
---@return Label 
function _class:setTextFontStyle(style)
	return self
end

---
---  设置自定义字体
---
---@param name string  字体名称
---@param size number  字体大小
---@return Label 
function _class:fontNameSize(name, size)
	return self
end

---
---  是否使用文本自适应
---
---@param isFit boolean  是否使用文本自适应，true为自适应，false为不自适应，默认false
---@return Label 
---@note  该已弃用，请使用新布局的WrapContent
function _class:setAutoFit(isFit)
	return self
end

---
---  包裹内容，即大小按照文本内容自适应, setWrapContent(true)与width(MeasurementType.WRAP_CONTENT) && height(MeasurementType.WRAP_CONTENT)等效
---
---@param isWrap boolean  true为自适应，false为不自适应，默认true
---@return Label 
---@note  当label同时设置setWrapContent方法及width(10):height(10)的情况下，展示效果取决于设置的先后顺序。如：当label设置了setWrapContent(true)之后设置width(10):height(10)，label宽度为10、高度为10；当设置width(10):height(10)固定宽高后设置WrapContent,即以setWrapContent设置为准
function _class:setWrapContent(isWrap)
	return self
end

---
---  设置多行文本之间行间距
---
---@param spacing number  行间的距离
---@return Label 
function _class:setLineSpacing(spacing)
	return self
end

---
---  设置是否在文字上面和下面添加一点额外的padding
---
---@param bool boolean  默认为false
---@return Label 
---@note  仅android有效，ios空实现
function _class:a_setIncludeFontPadding(bool)
	return self
end

return _class