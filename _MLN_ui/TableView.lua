---
--- Generated by MLN Team (https://www.immomo.com)
--- Created by MLN Team.
--- DateTime: 15-01-2020 17:35
---

---
---  列表数据展示控件，内容可复用
---
---
---  该控件使用复用的方式加载列表数据，根据数据源组数个数进行回调。支持上拉加载更多，下拉刷新数据。在上拉加载更多数据时，建议必要使用reloadData进行数据刷新，要采用局部刷新的方式进行刷新，效率会更高。
---
---@note  当cell的样式一致时，使用默认初始化方法即可，当cell样式较多时，要采用复用ID的形式进行初始化和赋值操作。另外，iOS默认展示滚动指示条，android默认不展示
---@class TableView : View @parent class
---@field name string 
local _class = {
	_priveta_class_name = "TableView"}

---
---  构造方法
---
---@param refreshEnable boolean  是否开启下拉刷新
---@param loadEnable boolean  是否开启上拉加载更多
---@return TableView 
---@note  刷新功能需桥接对应的代理方法
function TableView(refreshEnable, loadEnable)
	return _class
end

---
---  提供数据与view的绑定；提供点击等事件的回调
---
---
---  adapter提供了本组件的数据源，cell初始化，cell数据绑定，cell事件回调功能。
---
---@param adapter TableViewAdapter  数据与事件适配器
---@return TableView 
---@note  建议TableViewAdapter初始化完后再对TableView进行设置,因为设置adapter会触发刷新，当初始化完毕后设置可以减少刷新次数
function _class:adapter(adapter)
	return self
end

---
---  获取当前tableView绑定的adapter
---
---@return TableViewAdapter 
function _class:adapter()
	return TableViewAdapter()
end

---
---  设置加载更多的阈值，默认为0，取值范围0~1
---
---@param threshold number  阈值，范围0~1
---@return TableView 
---@note  eg：0.5表示还剩一半屏幕高度的页面还未显示时，就触发setLoadingCallback回调
function _class:loadThreshold(threshold)
	return self
end

---
---  获取当前预加载的阈值
---
---@return number 阈值
function _class:loadThreshold()
	return 0
end

---
---  设置内容偏移量
---
---@param offset Point  pt: 内容偏移量坐标, 这里把tableView内容的左上角坐标看做原点origin(0, 0)，pt即为相对origin的偏移量坐标
---@return TableView 
---@note  contentOffset，即内容偏移量，我们把tableView内容的左上角坐标看做原点origin(0, 0),内容偏移量即为当前实现内容的左上角坐标pt与origin之间的差值contentOffset(pt.x - origin.x, pt.y - origin.y)
function _class:contentOffset(offset)
	return self
end

---
---  获取内容偏移量坐标
---
---@return Point 内容偏移量坐标，这里把tableView内容的左上角坐标看做原点origin(0, 0)，pt即为相对origin的偏移量坐标
---@note  contentOffset，即内容偏移量，我们把tableView内容的左上角坐标看做原点origin(0, 0),内容偏移量即为当前实现内容的左上角坐标pt与origin之间的差值contentOffset(pt.x - origin.x, pt.y - origin.y)
function _class:contentOffset()
	return Point()
end

---
---  设置开始滚动的回调
---
---@param callback fun(x:number, y:number):void
---	 回调格式：
---		 ``` 
---		function(number x,number y) 
---		 	 ---x:x轴坐标 
---		 	 ---y:y轴坐标 
---		 end
---		```
---@return TableView 
function _class:setScrollBeginCallback(callback)
	return self
end

---
---  设置滚动中的回调
---
---@param callback fun(x:number, y:number):void
---	 回调格式：
---		 ``` 
---		function(number x,number y) 
---		 	 ---x:x轴坐标 
---		 	 ---y:y轴坐标 
---		 end
---		```
---@return TableView 
function _class:setScrollingCallback(callback)
	return self
end

---
---  设置拖拽结束后的回调
---
---@param callback fun(x:number, y:number):void
---	 回调格式：
---		 ``` 
---		function(number x,number y) 
---		 	 ---x:x轴坐标 
---		 	 ---y:y轴坐标 
---		 end
---		```
---@return TableView 
function _class:setEndDraggingCallback(callback)
	return self
end

---
---  设置开始减速滚动回调
---
---@param callback fun(x:number, y:number):void
---	 回调格式：
---		 ``` 
---		function(number x,number y) 
---		 	 ---x:x轴坐标 
---		 	 ---y:y轴坐标 
---		 end
---		```
---@return TableView 
function _class:setStartDeceleratingCallback(callback)
	return self
end

---
---  设置是否展示滚动指示器
---
---@param show boolean  默认为true
---@return TableView 
---@note  Android部分场景，指示器位置不能划到底部
function _class:showScrollIndicator(show)
	return self
end

---
---  重新回调所有的cell高度，并回调当前屏幕上cell的init和filData方法
---
---@return TableView 
---@note  在数据量特别大的情况下，当数据量较大并且使用heightForCell回调高度时，注意涉及到需要计算的高度要使用lua table进行缓存
function _class:reloadData()
	return self
end

---
---  刷新某一行的数据
---
---@param row number  指定的行
---@param section number  指定的组
---@param animated boolean  是否展示动画
---@return TableView 
---@note  动画效果仅ios有效，并且使用时请勿改变其他cell的内容，否则两端会有差异：android可以更新多个cell，ios只能更新单个
function _class:reloadAtRow(row, section, animated)
	return self
end

---
---  刷新某个组里所有行的数据
---
---@param section number  组数
---@param animated boolean  是否展示动画
---@return TableView 
---@note  动画效果仅ios有效，并且使用时请勿改变其他cell的内容，否则两端会有差异：android可以更新多个cell，ios只能更新单个
function _class:reloadAtSection(section, animated)
	return self
end

---
---  滚动到控件的顶部
---
---@param animated boolean  是否动画滚动到顶部
---@return TableView 
function _class:scrollToTop(animated)
	return self
end

---
---  滚动到某个cell
---
---@param row number  行数
---@param section number  组数
---@param animated boolean  是否动画滚动
---@return TableView 
function _class:scrollToCell(row, section, animated)
	return self
end

---
---  删除某行cell
---
---@param row number  行数
---@param section number  组数
---@return TableView 
function _class:deleteCellAtRow(row, section)
	return self
end

---
---  在指定位置插入cell
---
---@param row number  行数
---@param section number  组数
---@return TableView 
function _class:insertCellAtRow(row, section)
	return self
end

---
---  删除指定位置的cell
---
---@param section number  组数
---@param startRow number  开始行数
---@param endRow number  结束行数
---@return TableView 
function _class:deleteCellsAtSection(section, startRow, endRow)
	return self
end

---
---  在指定位置插入cell
---
---@param section number  组数
---@param startRow number  开始行数
---@param endRow number  结束行数
---@return TableView 
function _class:insertCellsAtSection(section, startRow, endRow)
	return self
end

---
---  在指定位置插入cell
---
---@param row number  行数
---@param section number  组数
---@param animated boolean  是否动画执行
---@return TableView 
function _class:insertRow(row, section, animated)
	return self
end

---
---  删除指定位置的cell
---
---@param row number  行数
---@param section number  组数
---@param animated boolean  是否动画执行
---@return TableView 
function _class:deleteRow(row, section, animated)
	return self
end

---
---  在指定位置范围插入cell
---
---@param section number  组数
---@param startRow number  开始行数
---@param endRow number  结束行数
---@param animated boolean  是否执行动画
---@return TableView 
function _class:insertRowsAtSection(section, startRow, endRow, animated)
	return self
end

---
---  在指定位置范围删除cell
---
---@param section number  组数
---@param startRow number  开始行数
---@param endRow number  结束行数
---@param animated boolean  是否执行动画
---@return TableView 
function _class:deleteRowsAtSection(section, startRow, endRow, animated)
	return self
end

---
---  是否在最顶端
---
---@return boolean 布尔值
function _class:isStartPosition()
	return true
end

---
---  设置是否开启下拉刷新功能
---
---@param enable boolean  是否开启
---@return TableView 
---@note  需要确保对应刷新的handler已经添加,在刷新过程中关闭会导致视图抖动
function _class:refreshEnable(enable)
	return self
end

---
---  获取是否开启了下拉刷新功能，默认false
---
---@return boolean 布尔值
function _class:refreshEnable()
	return true
end

---
---  获取当前是否正在刷新中
---
---@return boolean 布尔值
function _class:isRefreshing()
	return true
end

---
---  开始刷新动作
---
---@return TableView 
function _class:startRefreshing()
	return self
end

---
---  停止刷新动作
---
---@return TableView 
function _class:stopRefreshing()
	return self
end

---
---  设置触发了下拉刷新的回调
---
---@param callback fun():void
---	 回调格式：
---		 ``` 
---		 function() 
---		 end
---		```
---@return TableView 
function _class:setRefreshingCallback(callback)
	return self
end

---
---  设置是否开启上拉加载更多
---
---@param enable boolean  是否开启上拉加载更多
---@return TableView 
---@note  默认false，需要增加刷新对应的handler处理,在加载过程中关闭会导致视图抖动
function _class:loadEnable(enable)
	return self
end

---
---  获取当前是否开启了上拉加载更多功能
---
---@return boolean 
function _class:loadEnable()
	return true
end

---
---  获取是否正在上拉加载中
---
---@return boolean 布尔值
function _class:isLoading()
	return true
end

---
---  停止加载更多的动作
---
---@return TableView 
function _class:stopLoading()
	return self
end

---
---  触发没有更多数据，在TableView的底部会展示没有更多数据的提示
---
---@return TableView 
function _class:noMoreData()
	return self
end

---
---  去除“没有更多数据”的状态，将状态变成普通状态
---
---@return TableView 
function _class:resetLoading()
	return self
end

---
---  触发加载失败
---
---
---  该方法会触发上拉加载更多的加载失败提示，目前是空实现，无任何效果
---
---@return TableView 
function _class:loadError()
	return self
end

---
---  滚动到指定位置
---
---
---  
---
---@param offset Point  指定位置坐标
---@return TableView 
---@note  iOS可用, android sdk version >= 1.5.0可用
function _class:setOffsetWithAnim(offset)
	return self
end

---
---  设置触发了加载更多的回调
---
---@param callback fun():void
---	 回调格式：
---		 ``` 
---		 function() 
---		 end
---		```
---@return TableView 
function _class:setLoadingCallback(callback)
	return self
end

---
---  返回指定位置的cell, 只对屏幕内cell有效
---
---@param section number  组数
---@param row number  行数
---@return table 返回cell表
function _class:cellWithSectionRow(section, row)
	return table()
end

---
---  返回当前屏幕展示的所有cell
---
---@return Array 返回当前屏幕所有cell的数组
function _class:visibleCells()
	return Array()
end

---
---  设置是否可以滚动
---
---@param enable boolean  是否可以滚动
---@return TableView 
function _class:setScrollEnable(enable)
	return self
end

---
---  设置是否开启弹性效果
---
---@param bounces boolean  true:默认值，拖拽有弹性效果 false:关闭弹性效果
---@return TableView 
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounces(bounces)
	return self
end

---
---  获取是否开启弹性效果
---
---@return boolean 是否开启弹性效果
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounces()
	return true
end

---
---  设置是否开启垂直弹性效果
---
---
---  是否开启水平弹性效果，垂直排布时，用于处理ContentSize小于尺寸时的体验优化
---
---@param bounces boolean  true:默认值，拖拽有弹性效果 false:关闭弹性效果
---@return TableView 
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounceVertical(bounces)
	return self
end

---
---  获取是否开启垂直弹性效果
---
---@return boolean 是否开启垂直弹性效果
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounceVertical()
	return true
end

return _class