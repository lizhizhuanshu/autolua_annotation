---
--- Generated by MLN Team (https://www.immomo.com)
--- Created by MLN Team.
--- DateTime: 15-01-2020 17:35
---

---
---  编辑框
---
---@note  非容器视图，不可以添加子视图
---@class EditTextView : View @parent class
---@field name string 
local _class = {
	_priveta_class_name = "EditTextView"}

---
---  构造方法
---
---@return EditTextView 
function EditTextView()
	return _class
end

---
---  设置占位文字
---
---@param placeholder string  占位文字
---@return EditTextView 
function _class:placeholder(placeholder)
	return self
end

---
---  获取占位文字
---
---@return string 
function _class:placeholder()
	return "string"
end

---
---  设置占位文字颜色
---
---@param placeholderColor Color  占位文字颜色
---@return EditTextView 
function _class:placeholderColor(placeholderColor)
	return self
end

---
---  获取占位文字颜色
---
---@return Color 
function _class:placeholderColor()
	return Color()
end

---
---  设置文本颜色
---
---@param textColor Color  文本颜色
---@return EditTextView 
function _class:textColor(textColor)
	return self
end

---
---  获取文本颜色
---
---@return Color 
function _class:textColor()
	return Color()
end

---
---  设置文字大小
---
---@param fontSize number  文字大小
---@return EditTextView 
function _class:fontSize(fontSize)
	return self
end

---
---  获取字体大小
---
---@return number 
function _class:fontSize()
	return 0
end

---
---  设置输入模式
---
---@param inputMode EditTextViewInputMode  输入模式，见[EditTextViewInputMode](EditTextViewInputMode)
---@return EditTextView 
function _class:inputMode(inputMode)
	return self
end

---
---  获取输入模式
---
---@return EditTextViewInputMode 输入模式，见[EditTextViewInputMode](EditTextViewInputMode)
function _class:inputMode()
	return EditTextViewInputMode()
end

---
---  设置密码模式
---
---@param passwordMode boolean  是否为密码模式
---@return EditTextView 
---@note  输入字符以*号显示，可正常获取输入内容，如需限制输入内容，可自行制定规则。（PS: 两端只有单行模式支持密码输入，iOS输入文本的情况下，切换为密码模式后初次输入会将光标置于行尾 ）
function _class:passwordMode(passwordMode)
	return self
end

---
---  获取是否为密码模式状态
---
---@return boolean 
function _class:passwordMode()
	return true
end

---
---  设置键盘返回按钮模式，只在单行模式有效
---
---@param returnMode ReturnType  返回按钮模式，见[ReturnType](ReturnType)
---@return EditTextView 
function _class:returnMode(returnMode)
	return self
end

---
---  获取键盘返回按钮模式，只在单行模式有效
---
---@return ReturnType 返回按钮模式，见[ReturnType](ReturnType)
function _class:returnMode()
	return ReturnType()
end

---
---  设置文本对其方式
---
---@param textAlign TextAlign  文本对其方式, 见[TextAlign](TextAlign)
---@return EditTextView 
function _class:textAlign(textAlign)
	return self
end

---
---  获取文本对其方式
---
---@return TextAlign 文本对其方式, 见[TextAlign](TextAlign)
function _class:textAlign()
	return TextAlign()
end

---
---  设置最大字节数
---
---@param maxBytes number  最大字节数
---@return EditTextView 
---@note  最大字节数，汉字两个字节，表情四个字节(组合表情占据4个以上字节)，其他一个字节
function _class:maxBytes(maxBytes)
	return self
end

---
---  获取最大字节数
---
---@return number 
function _class:maxBytes()
	return 0
end

---
---  设置最大字符数
---
---@param maxLength number  字符数
---@return EditTextView 
function _class:maxLength(maxLength)
	return self
end

---
---  返回最大字符数
---
---@return number 
function _class:maxLength()
	return 0
end

---
---  设置文本内容
---
---@param text string  文本内容
---@return EditTextView 
function _class:text(text)
	return self
end

---
---  获取文本内容
---
---@return string 
function _class:text()
	return "string"
end

---
---  设置字体及大小
---
---@param fontName string  fontName:字体名字
---@param fontSize number  fontSize:字体大小
---@return EditTextView 
function _class:fontNameSize(fontName, fontSize)
	return self
end

---
---  单行模式
---
---@param single boolean  单行模式
---@return EditTextView 
---@note  单行模式，需要先调用，再设置其他属性，否则可能导致展示异常
function _class:singleLine(single)
	return self
end

---
---  设置内容开始改变的回调
---
---@param beginChangeCallback fun():void
---	 function()...end 
---		 内容开始修改的回调
---@return EditTextView 
function _class:setBeginChangingCallback(beginChangeCallback)
	return self
end

---
---  设置文字已经修改的回调
---
---@param didChangingCallback fun(now:string, start:number, count:number):void
---	 function(string now, int start, int count)...end 
---		 callback:文字已经修改的回调 
---		 now：当前text 
---		 start：改变的起始位置 
---		 count：改变的数量
---@return EditTextView 
function _class:setDidChangingCallback(didChangingCallback)
	return self
end

---
---  设置内容修改完毕的回调
---
---@param endChangeCallback fun(str:string):void
---	 function(string s)...end 
---		 callback:内容修改完毕的回调 
---		 s:修改之后的内容
---@return EditTextView 
function _class:setEndChangedCallback(endChangeCallback)
	return self
end

---
---  设置点击键盘'Return'按钮的回调
---
---@param returnCallback fun():void
---	 callback:点击键盘'Return'按钮的回调
---@return EditTextView 
function _class:setReturnCallback(returnCallback)
	return self
end

---
---  设置文本是否可编辑
---
---@param canEdit boolean  文本是否可编辑
---@return EditTextView 
function _class:setCanEdit(canEdit)
	return self
end

---
---  取消键盘显示
---
---@return EditTextView 
function _class:dismissKeyboard()
	return self
end

---
---  弹出键盘显示
---
---@return EditTextView 
function _class:showKeyboard()
	return self
end

---
---  设置光标颜色
---
---@param cursorColor Color  color:光标颜色
---@return EditTextView 
function _class:setCursorColor(cursorColor)
	return self
end

return _class