---
--- Generated by MLN Team (https://www.immomo.com)
--- Created by MLN Team.
--- DateTime: 15-01-2020 17:35
---

---
---  可滚动的view，没有复用
---
---@class ScrollView : View @parent class
---@field name string 
local _class = {
	_priveta_class_name = "ScrollView"}

---
---  无参构造方法
---
---@return ScrollView 
function ScrollView()
	return _class
end

---
---  1个参数构造方法
---
---@param isHorizontal boolean  horizontal:是否是水平方向，默认竖向滑动;
---@return ScrollView 
function ScrollView(isHorizontal)
	return _class
end

---
---  2个参数构造方法
---
---@param isHorizontal boolean  horizontal:是否是水平方向，默认竖向滑动;
---@param isLinear boolean  linear:是否在里面默认添加相同方向的线性布局，默认添加Frame布局
---@return ScrollView 
function ScrollView(isHorizontal, isLinear)
	return _class
end

---
---  设置contentSize
---
---@param size Size  sz: 尺寸
---@return ScrollView 
---@note  该方法已经弃用
function _class:contentSize(size)
	return self
end

---
---  获取scrollView可滚动区域尺寸
---
---@return Size 
function _class:contentSize()
	return Size()
end

---
---  设置内容偏移量
---
---@param offset Point  pt: 内容偏移量坐标, 这里把scrollView内容的左上角坐标看做原点origin(0, 0)，pt即为相对origin的偏移量坐标
---@return ScrollView 
---@note  contentOffset，即内容偏移量，我们把scrollView内容的左上角坐标看做原点origin(0, 0),内容偏移量即为当前实现内容的左上角坐标pt与origin之间的差值contentOffset(pt.x - origin.x, pt.y - origin.y)
function _class:contentOffset(offset)
	return self
end

---
---  获取内容偏移量坐标
---
---
---  <# Discussion #>
---
---@return Point 内容偏移量坐标，这里把scrollView内容的左上角坐标看做原点origin(0, 0)，pt即为相对origin的偏移量坐标
---@note  contentOffset，即内容偏移量，我们把scrollView内容的左上角坐标看做原点origin(0, 0),内容偏移量即为当前实现内容的左上角坐标pt与origin之间的差值contentOffset(pt.x - origin.x, pt.y - origin.y)
function _class:contentOffset()
	return Point()
end

---
---  设置是否显示水平滚动指示器
---
---@param isShow boolean  是否显示水平滚动指示器
---@return ScrollView 
function _class:showsHorizontalScrollIndicator(isShow)
	return self
end

---
---  获取是否显示水平滚动指示器状态
---
---@return boolean 
function _class:showsHorizontalScrollIndicator()
	return true
end

---
---  设置是否显示竖直滚动指示器
---
---@param isShow boolean  是否显示竖直滚动指示器
---@return ScrollView 
function _class:showsVerticalScrollIndicator(isShow)
	return self
end

---
---  获取是否显示竖直滚动指示器
---
---@return boolean 
function _class:showsVerticalScrollIndicator()
	return true
end

---
---  设置开始滚动回调
---
---@param callback fun():void
---	 function()...end 
---		 手指开始拖动回调
---@return ScrollView 
function _class:setScrollBeginCallback(callback)
	return self
end

---
---  设置滚动中回调
---
---@param callback fun():void
---	 function()...end 
---		  滚动中回调
---@return ScrollView 
function _class:setScrollingCallback(callback)
	return self
end

---
---  设置拖拽结束回调，即拖动结束手指离开屏幕的瞬间
---
---@param callback fun():void
---	 function()...end 
---		 拖拽结束回调
---@return ScrollView 
function _class:setEndDraggingCallback(callback)
	return self
end

---
---  设置滚动开始减速的回调
---
---@param callback fun():void
---	 function()...end 
---		 滚动开始减速的回调
---@return ScrollView 
function _class:setStartDeceleratingCallback(callback)
	return self
end

---
---  设置滚动结束回调
---
---@param callback fun():void
---	 function()...end 
---		 滚动结束回调
---@return ScrollView 
function _class:setScrollEndCallback(callback)
	return self
end

---
---  设置内边距
---
---
---  <# Discussion #>
---
---@param top number  top：上
---@param right number  right：右
---@param bottom number  bottom：下 
---@param left number  left：左
---@return ScrollView 
---@note  iOS 有效，安卓空实现
function _class:setContentInset(top, right, bottom, left)
	return self
end

---
---  获取内边距回调
---
---@param callback fun(top:number, right:number, bottom:number, left:number):void
---	 function(number top , number right , number bottom , number left) ...end 
---		 top：上 
---		 right：右 
---		 bottom：下 
---		 left：左
---@return ScrollView 
function _class:getContentInset(callback)
	return self
end

---
---  设置滚动指示器边距，当有需求处理指示器的上下左右边偏移量时使用
---
---@param top number  top：上
---@param right number  right：右
---@param bottom number  bottom：下
---@param left number  left：左
---@return ScrollView 
---@note  iOS 有效，安卓空实现
function _class:setScrollIndicatorInset(top, right, bottom, left)
	return self
end

---
---  滚动到指定位置
---
---@param offset Point  指定位置坐标
---@return ScrollView 
function _class:setOffsetWithAnim(offset)
	return self
end

---
---  设置是否可以滚动
---
---@param canScroll boolean  是否可以滚动
---@return ScrollView 
function _class:setScrollEnable(canScroll)
	return self
end

---
---  设置是否开启弹性效果
---
---@param bounces boolean  true:默认值，拖拽有弹性效果 false:关闭弹性效果
---@return ScrollView 
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounces(bounces)
	return self
end

---
---  获取是否开启弹性效果
---
---@return boolean 是否开启弹性效果
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounces()
	return true
end

---
---  设置是否开启横向弹性效果
---
---
---  是否开启水平弹性效果，水平排布时，用于处理ContentSize小于尺寸时的体验优化
---
---@param bounces boolean  true:默认值，拖拽有弹性效果 false:关闭弹性效果
---@return ScrollView 
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounceHorizontal(bounces)
	return self
end

---
---  获取是否开启横向弹性效果
---
---@return boolean 是否开启横向弹性效果
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounceHorizontal()
	return true
end

---
---  设置是否开启垂直弹性效果
---
---
---  是否开启水平弹性效果，垂直排布时，用于处理ContentSize小于尺寸时的体验优化
---
---@param bounces boolean  true:默认值，拖拽有弹性效果 false:关闭弹性效果
---@return ScrollView 
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounceVertical(bounces)
	return self
end

---
---  获取是否开启垂直弹性效果
---
---@return boolean 是否开启垂直弹性效果
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounceVertical()
	return true
end

---
---  设置滚动速度
---
---@param speed float  如果传入1，则是原始的速度值，如果传入1.2代表是原始速度值的1.2倍，此值与原始速度值是乘积关系
---@return float 
---@note  Android私有方法
function _class:a_flingSpeed(speed)
	return float()
end

return _class