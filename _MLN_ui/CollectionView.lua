---
--- Generated by MLN Team (https://www.immomo.com)
--- Created by MLN Team.
--- DateTime: 15-01-2020 17:35
---

---
---  CollectionView, 提供列表功能组件，支持水平、竖直方向滚动，非常适合长列表的展示
---
---@note  iOS默认展示滚动指示条，android默认不展示
---@class CollectionView : View @parent class
---@field name string 
local _class = {
	_priveta_class_name = "CollectionView"}

---
---  构造方法
---
---@param refreshEnable boolean  refreshEnable:是否支持下拉刷新
---@param loadEnable boolean  loadEnable:是否支持加载更多
---@return CollectionView 
function CollectionView(refreshEnable, loadEnable)
	return _class
end

---
---  设置adapter
---
---@param adapter CollectionViewAdapter  提供数据与view的绑定；提供点击等事件的回调
---@return CollectionView 
function _class:adapter(adapter)
	return self
end

---
---  获取当前CollectionView绑定的adapter
---
---@return CollectionViewAdapter 返回当前CollectionView绑定的adapter
function _class:adapter()
	return CollectionViewAdapter()
end

---
---  设置layout
---
---@param layout CollectionViewLayout  支持CollectionViewLayout
---@return CollectionView 
function _class:layout(layout)
	return self
end

---
---  获取和CollectionView绑定的layout
---
---@return CollectionViewLayout 返回和CollectionView绑定的layout
---@note  建议使用CollectionViewLayout
function _class:layout()
	return CollectionViewLayout()
end

---
---  设置是否打开多虚拟机cell重用
---
---@param openReuseCell boolean  是否打开多虚拟机cell重用
---@return CollectionView 
---@note  预留，不建议使用此方法
function _class:openReuseCell(openReuseCell)
	return self
end

---
---  获取是否打开多虚拟机cell重用
---
---@return boolean 返回是否打开多虚拟机cell重用
---@note  预留，不建议使用此方法
function _class:openReuseCell()
	return true
end

---
---  设置滚动方向
---
---@param direction ScrollDirection  支持横向ScrollDirection.HORIZONTAL、纵向ScrollDirection.VERTICAL，见[ScrollDirection](ScrollDirection)
---@return CollectionView 
function _class:scrollDirection(direction)
	return self
end

---
---  获取滚动方向
---
---@return ScrollDirection 返回横向ScrollDirection.HORIZONTAL、纵向ScrollDirection.VERTICAL
---@note  支持横向ScrollDirection.HORIZONTAL、纵向ScrollDirection.VERTICAL
function _class:scrollDirection()
	return ScrollDirection()
end

---
---  设置是否显示滚动指示器
---
---@param showIndicator boolean  true:显示滚动指示器 false:不显示滚动指示器
---@return CollectionView 
function _class:showScrollIndicator(showIndicator)
	return self
end

---
---  获取是否显示滚动器状态
---
---@return boolean 返回是否显示滚动器状态
function _class:showScrollIndicator()
	return true
end

---
---  设置回调加载更多方法的阈值
---
---@param loadThreshold number  默认0，取值范围0~无穷大；eg：0.5表示还剩一半屏幕高度的页面还未显示时，就回调LoadingCallback
---@return CollectionView 
function _class:loadThreshold(loadThreshold)
	return self
end

---
---  获取提前加载更多内容的阈值,取值范围0~无穷大, 默认0
---
---@return number 返回提前加载更多内容的阈值,取值范围0~无穷大, 默认0
function _class:loadThreshold()
	return 0
end

---
---  设置内容偏移量
---
---@param contentOffset Point  pt: 内容偏移量坐标, 这里把tableView内容的左上角坐标看做原点origin(0, 0)，pt即为相对origin的偏移量坐标
---@return CollectionView 
---@note  contentOffset，即内容偏移量，我们把tableView内容的左上角坐标看做原点origin(0, 0),内容偏移量即为当前实现内容的左上角坐标pt与origin之间的差值contentOffset(pt.x - origin.x, pt.y - origin.y)
function _class:contentOffset(contentOffset)
	return self
end

---
---  获取内容偏移量坐标
---
---@return Point 内容偏移量坐标，这里把tableView内容的左上角坐标看做原点origin(0, 0)，pt即为相对origin的偏移量坐标
---@note  contentOffset，即内容偏移量，我们把tableView内容的左上角坐标看做原点origin(0, 0),内容偏移量即为当前实现内容的左上角坐标pt与origin之间的差值contentOffset(pt.x - origin.x, pt.y - origin.y)
function _class:contentOffset()
	return Point()
end

---
---  设置开始滚动的回调
---
---@param scrollBeginCallback fun():void
---	 function...end
---@return CollectionView 
function _class:setScrollBeginCallback(scrollBeginCallback)
	return self
end

---
---  设置滚动中的回调
---
---@param scrollingCallback fun():void
---	 function()...end
---@return CollectionView 
function _class:setScrollingCallback(scrollingCallback)
	return self
end

---
---  设置停止拖拽的回调
---
---@param endDraggingCallback fun():void
---	 function...end
---@return CollectionView 
function _class:setEndDraggingCallback(endDraggingCallback)
	return self
end

---
---  设置开始减速滚动回调
---
---@param startDeceleratingCallback fun():void
---	 function...end
---@return CollectionView 
function _class:setStartDeceleratingCallback(startDeceleratingCallback)
	return self
end

---
---  刷新当前控件的所有数据
---
---@return CollectionView 
function _class:reloadData()
	return self
end

---
---  重新加载指定cell
---
---@param row number  row:指定重新加载cell的索引
---@param section number  section:指定重新加载cell的section
---@param animate boolean  animate:是否展现动画，为true时仅ios有效
---@return CollectionView 
---@note  动画效果仅ios有效，使用时请勿改变其他cell的内容，否则两端会有差异：android可以更新多个cell，ios只能更新单个
function _class:reloadAtRow(row, section, animate)
	return self
end

---
---  重新渲染指定section的cell
---
---@param section number  section:指定重新渲染cell的section
---@param animate boolean  animate:是否展现动画，为true时仅ios有效
---@return CollectionView 
---@note  动画效果仅ios有效，使用时请勿改变其他cell的内容，否则两端会有差异：android可以更新多个cell，ios只能更新单个
function _class:reloadAtSection(section, animate)
	return self
end

---
---  滚动到指定cell
---
---@param row number  row: 指定cell的索引
---@param section number  section:指定cell的section
---@param animate boolean  animate：是否展现动画
---@return CollectionView 
function _class:scrollToCell(row, section, animate)
	return self
end

---
---  滚动到列表顶部
---
---@param animate boolean  animated: 是否以动画的形式滚动
---@return CollectionView 
function _class:scrollToTop(animate)
	return self
end

---
---  是否在最顶端
---
---@return boolean 返回是否在最顶端
function _class:isStartPosition()
	return true
end

---
---  删除指定位置的cell
---
---@param row number  row:指定删除cell的索引
---@param section number  section:指定删除cell的section
---@return CollectionView 
---@note  请勿改变多个cell，或其他cell数据，否则有差异
function _class:deleteCellAtRow(row, section)
	return self
end

---
---  在指定位置插入cell
---
---@param row number  row:指定插入cell的索引
---@param section number  section:指定插入cell的section
---@return CollectionView 
---@note  请勿改变多个cell，或其他cell数据，否则有差异，如果在屏幕外插入cell、可能会错位
function _class:insertCellAtRow(row, section)
	return self
end

---
---  在指定位置插入cell
---
---@param section number  section:指定插入cell的section
---@param startRow number  startRow:指定插入cell的开始索引
---@param endRow number  endRow:指定插入cell的结束索引
---@return CollectionView 
---@note  请勿改变其他cell数据，或越界刷新，否则有差异
function _class:insertCellsAtSection(section, startRow, endRow)
	return self
end

---
---  删除指定位置cell
---
---@param section number  section:指定删除cell的section
---@param startRow number  startRow:指定删除cell的开始索引
---@param endRow number  endRow:指定删除cell的结束索引
---@return CollectionView 
---@note  请勿改变其他cell数据，或越界刷新，否则有差异
function _class:deleteCellsAtSection(section, startRow, endRow)
	return self
end

---
---  获取指定section、row的cell的起始坐标，仅iOS存在此方法
---
---@param row number  row: 指定行
---@param section number  section: 指定组
---@return Point 
---@note  仅iOS存在此方法, 不建议使用
function _class:pointAtIndexPath(row, section)
	return Point()
end

---
---  删除指定位置的cell
---
---@param row number  row:指定删除cell的索引
---@param section number  section:指定删除cell的section
---@param animate boolean  animated:是否执行动画
---@return CollectionView 
---@note  请勿改变多个cell，或其他cell数据，否则有差异
function _class:deleteRow(row, section, animate)
	return self
end

---
---  在指定位置插入cell
---
---@param row number  row:指定插入cell的索引
---@param section number  section:指定插入cell的section
---@param animate boolean  animated:是否执行动画
---@return CollectionView 
---@note  请勿改变多个cell，或其他cell数据，否则有差异，如果在屏幕外插入cell、可能会错位
function _class:insertRow(row, section, animate)
	return self
end

---
---  在指定位置插入cell
---
---@param section number  section:指定插入cell的section
---@param startRow number  startRow:指定插入cell的开始索引
---@param endRow number  endRow:指定插入cell的结束索引
---@param animate boolean  animated:是否执行动画
---@return CollectionView 
---@note  请勿改变其他section数据，或越界刷新，否则有差异
function _class:insertRowsAtSection(section, startRow, endRow, animate)
	return self
end

---
---  删除指定位置cell
---
---@param section number  section:指定删除cell的section>
---@param startRow number  startRow:指定删除cell的开始索引
---@param endRow number  endRow:指定删除cell的结束索引
---@param animate boolean  animated:是否执行动画
---@return CollectionView 
---@note  请勿改变其他section数据，或越界刷新，否则有差异
function _class:deleteRowsAtSection(section, startRow, endRow, animate)
	return self
end

---
---  设置是否支持下拉刷新
---
---@param refreshEnable boolean  是否支持下拉刷新
---@return CollectionView 
---@note  默认false，需要增加刷新对应的handler处理,在刷新过程中关闭会导致视图抖动
function _class:refreshEnable(refreshEnable)
	return self
end

---
---  获取是否支持下拉刷新状态
---
---@return boolean 
function _class:refreshEnable()
	return true
end

---
---  是否正在下拉刷新
---
---@return boolean 
function _class:isRefreshing()
	return true
end

---
---  移动到列表开头，并开始下拉刷新
---
---@return CollectionView 
function _class:startRefreshing()
	return self
end

---
---  停止下拉刷新动画
---
---@return CollectionView 
function _class:stopRefreshing()
	return self
end

---
---  设置下拉刷新触发后的回调
---
---@param refreshingCallback fun():void
---	 function()...end
---@return CollectionView 
function _class:setRefreshingCallback(refreshingCallback)
	return self
end

---
---  设置是否支持加载更多
---
---@param loadEnable boolean  是否支持加载更多
---@return CollectionView 
---@note  默认false，需要增加刷新对应的handler处理,在加载过程中关闭会导致视图抖动
function _class:loadEnable(loadEnable)
	return self
end

---
---  获取是否支持加载更多状态
---
---@return boolean 
function _class:loadEnable()
	return true
end

---
---  是否正在上拉加载
---
---@return boolean 
function _class:isLoading()
	return true
end

---
---  停止上拉加载，停止转圈动画
---
---@return CollectionView 
function _class:stopLoading()
	return self
end

---
---  没有更多数据，之后再上拉不会触发loading回调
---
---@return CollectionView 
function _class:noMoreData()
	return self
end

---
---  去除“没有更多数据”的状态，将状态变成普通状态
---
---@return CollectionView 
function _class:resetLoading()
	return self
end

---
---  显示加载错误，android有效，iOS空实现
---
---@return CollectionView 
function _class:loadError()
	return self
end

---
---  设置上拉加载触发后的回调
---
---@param loadingCallback fun():void
---	 function()...end
---@return CollectionView 
function _class:setLoadingCallback(loadingCallback)
	return self
end

---
---  返回指定位置的cell，只对屏幕内cell有效
---
---@param section number  section:指定返回cell的section
---@param row number  row:指定返回cell的索引
---@return table 返回cell
function _class:cellWithSectionRow(section, row)
	return table()
end

---
---  返回当前屏幕展示的所有cell
---
---@return Array 返回当前屏幕展示的所有cell的数组
function _class:visibleCells()
	return Array()
end

---
---  设置是否可以滚动
---
---@param enable boolean  enable:是否可滚动
---@return CollectionView 
function _class:setScrollEnable(enable)
	return self
end

---
---  滚动到指定位置
---
---
---  
---
---@param point Point  指定位置坐标
---@return CollectionView 
---@note  iOS可用, android sdk version >= 1.5.0可用
function _class:setOffsetWithAnim(point)
	return self
end

---
---  设置是否开启弹性效果
---
---@param bounces boolean  true:默认值，拖拽有弹性效果 false:关闭弹性效果
---@return CollectionView 
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounces(bounces)
	return self
end

---
---  获取是否开启弹性效果
---
---@return boolean 是否开启弹性效果
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounces()
	return true
end

---
---  设置是否开启横向弹性效果
---
---
---  是否开启水平弹性效果，水平排布时，用于处理ContentSize小于尺寸时的体验优化
---
---@param bounces boolean  true:默认值，拖拽有弹性效果 false:关闭弹性效果
---@return CollectionView 
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounceHorizontal(bounces)
	return self
end

---
---  获取是否开启横向弹性效果
---
---@return boolean 是否开启横向弹性效果
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounceHorizontal()
	return true
end

---
---  设置是否开启垂直弹性效果
---
---
---  是否开启水平弹性效果，垂直排布时，用于处理ContentSize小于尺寸时的体验优化
---
---@param bounces boolean  true:默认值，拖拽有弹性效果 false:关闭弹性效果
---@return CollectionView 
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounceVertical(bounces)
	return self
end

---
---  获取是否开启垂直弹性效果
---
---@return boolean 是否开启垂直弹性效果
---@note  iOS私有方法，仅在必要时使用，使用时需判断平台
function _class:i_bounceVertical()
	return true
end

return _class